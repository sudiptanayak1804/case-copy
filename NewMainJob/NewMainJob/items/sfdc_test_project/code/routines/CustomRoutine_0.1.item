package routines;
import java.util.Random;
/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class CustomRoutine {

    /**
     * helloExample: not return value, only print "hello" + message.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} helloExemple("world") # hello world !.
     */
	public static String generateRandomString(String sInputString) {
		
		String aToZ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
		
	    Random rand=new Random();
	    StringBuilder res=new StringBuilder();
	    for (int i = 0; i < sInputString.length(); i++) {
	       int randIndex=rand.nextInt(aToZ.length()); 
	       res.append(aToZ.charAt(randIndex));            
	    }
	    return res.toString();
	}
	
	public static String generateRandomAlphaNumVal(String sInputString) {
		
		String aToZ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
		
	    Random rand=new Random();
	    StringBuilder res=new StringBuilder();
	    for (int i = 0; i < sInputString.length(); i++) {
	       int randIndex=rand.nextInt(aToZ.length()); 
	       res.append(aToZ.charAt(randIndex));            
	    }
	    return res.toString();
	}
	
	public static String generateRandomNumberText(String sInputString) {
		
		String oneToNine = "123456789";		
	    Random rand=new Random();
	    StringBuilder res=new StringBuilder();
	    for (int i = 0; i < sInputString.length(); i++) {
	       int randIndex=rand.nextInt(oneToNine.length()); 
	       res.append(oneToNine.charAt(randIndex));            
	    }
	    return res.toString();
	}
	
    public static Integer generateRandomNumberInt(Integer iInputNumber) {
    	String sInputString = String.valueOf(iInputNumber);
		String oneToNine = "123456789";		
	    Random rand=new Random();
	    StringBuilder res=new StringBuilder();
	    for (int i = 0; i < sInputString.length(); i++) {
	       int randIndex=rand.nextInt(oneToNine.length()); 
	       res.append(oneToNine.charAt(randIndex));            
	    }
	    return Integer.valueOf(res.toString());
	}
    
    public static String generateRandomEmail(String sInput) {
    	String sEmailToReturn = "";
    	String [] arrOfStr = sInput.split("@");    
    	arrOfStr[0] = generateRandomString(arrOfStr[0]);
    	String sDomain = String.valueOf(arrOfStr[1]);
        String[] arrOfDomain = sDomain.split("\\.");
    	arrOfDomain[0] = generateRandomString(arrOfDomain[0]);    
    	sEmailToReturn = arrOfStr[0]+"@"+arrOfDomain[0]+"."+arrOfDomain[1];
    	return sEmailToReturn;    	
    }
}